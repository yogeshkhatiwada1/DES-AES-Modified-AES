/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjectUI;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.FileNotFoundException;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

/**
 *
 * @author acer
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        jButton2.setEnabled(false);
        DESKEY.setEnabled(false);
        AESKEY.setEnabled(false);
        MAESKEY.setEnabled(false);
    }
    File selectedFile;
    static String desKey;
    static String aesKey;
    static String mAesKey;
    static String DesEncryptionTime;
    static String DesDecryptionTime;
    static String AesEncryptionTime;
    static String AesDecryptionTime;
    static String MAesEncryptionTime;
    static String MAesDecryptionTime;
    static String DesEncryptedText;
    static String AesEncryptedText;
    static String MAesEncryptedText;
    static DecimalFormat df = new DecimalFormat("#.####");

    public JButton getJButton2() {
        return jButton2;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jCheckBox3 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DESKEY = new javax.swing.JTextField();
        AESKEY = new javax.swing.JTextField();
        MAESKEY = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(32767, 32767));
        setPreferredSize(new java.awt.Dimension(1300, 700));
        setSize(new java.awt.Dimension(0, 0));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jDesktopPane1.setBackground(new java.awt.Color(203, 203, 199));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(32767, 32767));

        jPanel1.setBackground(new java.awt.Color(20, 20, 20));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Comparative Anaysing System Between DES, AES & Modified AES");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.add(jLabel1);

        jPanel2.setBackground(new java.awt.Color(20, 20, 20));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setBackground(new java.awt.Color(23, 181, 253));
        jLabel2.setFont(new java.awt.Font("Ink Free", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Based On DNA Cryptography");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jLabel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel2.setOpaque(true);
        jPanel2.add(jLabel2, new java.awt.GridBagConstraints());

        jPanel3.setBackground(new java.awt.Color(203, 203, 199));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(355, 480));

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jCheckBox1.setLabel("DES");
        jCheckBox1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jCheckBox1.setMinimumSize(new java.awt.Dimension(600, 800));
        jCheckBox1.setName("SelectAlgorithm"); // NOI18N
        jCheckBox1.setPreferredSize(new java.awt.Dimension(49, 24));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setMaximumSize(new java.awt.Dimension(1920, 1080));

        jCheckBox3.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jCheckBox3.setText("Modified-AES");
        jCheckBox3.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jCheckBox3.setMinimumSize(new java.awt.Dimension(600, 800));
        jCheckBox3.setName("SelectAlgorithm"); // NOI18N
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(250, 250, 250));
        jTextField1.setFont(new java.awt.Font("Segoe UI Light", 2, 14)); // NOI18N
        jTextField1.setText("Browse a file location...");
        jTextField1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jTextField1.setMinimumSize(new java.awt.Dimension(600, 800));
        jTextField1.setName("FileChooser"); // NOI18N
        jTextField1.setOpaque(true);
        jTextField1.setSelectionColor(new java.awt.Color(255, 255, 255));
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jCheckBox2.setText("AES");
        jCheckBox2.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jCheckBox2.setMinimumSize(new java.awt.Dimension(600, 800));
        jCheckBox2.setName("SelectAlgorithm"); // NOI18N
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Key For DES:");
        jLabel3.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setMinimumSize(new java.awt.Dimension(600, 800));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Key For AES:");
        jLabel6.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel6.setMinimumSize(new java.awt.Dimension(600, 800));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Key For Modified-AES:");
        jLabel7.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel7.setMinimumSize(new java.awt.Dimension(600, 800));

        DESKEY.setToolTipText("");
        DESKEY.setMaximumSize(new java.awt.Dimension(1920, 1080));
        DESKEY.setMinimumSize(new java.awt.Dimension(600, 800));
        DESKEY.setName("DESKEY"); // NOI18N
        DESKEY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DESKEYKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DESKEYKeyTyped(evt);
            }
        });

        AESKEY.setMaximumSize(new java.awt.Dimension(1920, 1080));
        AESKEY.setMinimumSize(new java.awt.Dimension(600, 800));
        AESKEY.setName("AESKEY"); // NOI18N
        AESKEY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AESKEYKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AESKEYKeyTyped(evt);
            }
        });

        MAESKEY.setMaximumSize(new java.awt.Dimension(1920, 1080));
        MAESKEY.setMinimumSize(new java.awt.Dimension(600, 800));
        MAESKEY.setName("MAESKEY"); // NOI18N
        MAESKEY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MAESKEYKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MAESKEYKeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(23, 181, 253));
        jButton1.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButton1.setText("Proceed");
        jButton1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jButton1.setMinimumSize(new java.awt.Dimension(600, 800));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Choose a Text File:");
        jLabel4.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel4.setMinimumSize(new java.awt.Dimension(600, 800));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Select Algorithm:");
        jLabel5.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel5.setMinimumSize(new java.awt.Dimension(600, 800));

        jLabel12.setFont(new java.awt.Font("Sitka Text", 2, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(185, 0, 0));
        jLabel12.setText(" ");
        jLabel12.setToolTipText("");
        jLabel12.setAlignmentY(0.0F);
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel12.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel12.setPreferredSize(new java.awt.Dimension(4, 14));
        jLabel12.setRequestFocusEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jTextArea1.setMinimumSize(new java.awt.Dimension(600, 800));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MAESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 1, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MAESKEY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel4, java.awt.BorderLayout.LINE_START);

        jPanel5.setBackground(new java.awt.Color(203, 203, 199));
        jPanel5.setMinimumSize(new java.awt.Dimension(0, 0));

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Output Section");
        jLabel8.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel8.setMinimumSize(new java.awt.Dimension(600, 800));

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextArea5.setRows(5);
        jTextArea5.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jTextArea5.setMinimumSize(new java.awt.Dimension(600, 800));
        jScrollPane5.setViewportView(jTextArea5);

        jPanel6.add(jScrollPane5);

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextArea6.setRows(5);
        jTextArea6.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jTextArea6.setMinimumSize(new java.awt.Dimension(600, 800));
        jScrollPane6.setViewportView(jTextArea6);

        jPanel6.add(jScrollPane6);

        jTextArea7.setEditable(false);
        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextArea7.setRows(5);
        jTextArea7.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jTextArea7.setMinimumSize(new java.awt.Dimension(600, 800));
        jScrollPane7.setViewportView(jTextArea7);

        jPanel6.add(jScrollPane7);

        jPanel7.setBackground(new java.awt.Color(203, 203, 199));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Check Result");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(210, 105, 0), 1, true));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jButton2.setMinimumSize(new java.awt.Dimension(600, 800));
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton2, new java.awt.GridBagConstraints());

        jPanel8.setBackground(new java.awt.Color(203, 203, 199));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jPanel9.setBackground(new java.awt.Color(203, 203, 199));

        jLabel9.setFont(new java.awt.Font("Sitka Text", 2, 14)); // NOI18N
        jLabel9.setText("DES Output");
        jLabel9.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel9.setMinimumSize(new java.awt.Dimension(600, 800));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.add(jPanel9);

        jPanel10.setBackground(new java.awt.Color(203, 203, 199));

        jLabel11.setFont(new java.awt.Font("Sitka Text", 2, 14)); // NOI18N
        jLabel11.setText("AES Output");
        jLabel11.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel11.setMinimumSize(new java.awt.Dimension(600, 800));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.add(jPanel10);

        jPanel11.setBackground(new java.awt.Color(203, 203, 199));

        jLabel10.setFont(new java.awt.Font("Sitka Text", 2, 14)); // NOI18N
        jLabel10.setText("Modified-AES Output");
        jLabel10.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel10.setMinimumSize(new java.awt.Dimension(600, 800));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.add(jPanel11);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        getContentPane().add(jDesktopPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            DESKEY.requestFocusInWindow();
            DESKEY.setEnabled(true);
        }
        if(!jCheckBox1.isSelected()){
            clearTextArea5();
            DESKEY.setText(null);
            DESKEY.setEnabled(false);
            DesEncryptionTime=null;
            DesDecryptionTime=null;
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            MAESKEY.requestFocusInWindow();
            MAESKEY.setEnabled(true);
        }
        if(!jCheckBox3.isSelected()){
            clearTextArea7();
            MAESKEY.setText(null);
            MAESKEY.setEnabled(false);
            MAesEncryptionTime=null;
            MAesDecryptionTime=null;
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        chooser.setFileFilter(new FileNameExtensionFilter("Text Files", "txt"));
        int result = chooser.showOpenDialog(jPanel1);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = chooser.getSelectedFile(); // Set the selected file as an instance variable
            jTextField1.setText(selectedFile.getAbsolutePath());
            jLabel12.setText("File Name: "+selectedFile.getName());
            // Call the actionPerformed method to read and display the contents of the selected file
            jTextField1ActionPerformed(null);
        } else if (result == JFileChooser.CANCEL_OPTION) {
            jTextArea1.setText("");
            selectedFile=null;
            jTextField1.setText("Browse a File Location...");
            jLabel12.setText("No File Selected");
            clearTextArea5();
            clearTextArea6();
            clearTextArea7();
            jButton2.setEnabled(false);
        }
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        if (selectedFile != null) {
            if (!selectedFile.getName().endsWith(".txt")) {
                jLabel12.setText("Error: Only .txt files can be opened");
                return;
            }
            try {
                jTextArea1.setText("");
                Scanner scanner = new Scanner(selectedFile);
                while (scanner.hasNextLine()) {
                    jTextArea1.append(scanner.nextLine() + "\n");
                }
            } catch (FileNotFoundException e) {
                jLabel12.setText("Error: No Such File Exists");
            }
        } else {
            jTextArea1.setText("");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            AESKEY.requestFocusInWindow();
            AESKEY.setEnabled(true);
        }
        if(!jCheckBox2.isSelected()){
            clearTextArea6();
            AESKEY.setText(null);
            AESKEY.setEnabled(false);
            AesEncryptionTime=null;
            AesDecryptionTime=null;
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    public void clearTextArea5() {
        jTextArea5.setText("");
    }
    public void clearTextArea6() {
        jTextArea6.setText("");
    }
    public void clearTextArea7() {
        jTextArea7.setText("");
    }
    private void updateDesKey() {
        desKey = DESKEY.getText();
        clearTextArea5();
    }
    private void updateAesKey() {
        aesKey = AESKEY.getText();
        clearTextArea6();
    }
    private void updateMAesKey() {
        mAesKey = MAESKEY.getText();
        clearTextArea7();
    }
    public static String ChiResult(String text) {

        String encryptedText = text;

        // Create a frequency distribution map for the encrypted text
        Map<Character, Integer> frequencyMap = new HashMap<>();
        for (char c : encryptedText.toCharArray()) {
            frequencyMap.put(c, frequencyMap.getOrDefault(c, 0) + 1);
        }

        // Calculate the expected frequency distribution for a uniform distribution
        double expectedFrequency = encryptedText.length() / (double) frequencyMap.size();

        // Calculate the chi-square statistic
        double chiSquare = 0;
        for (int frequency : frequencyMap.values()) {
            double deviation = frequency - expectedFrequency;
            chiSquare += deviation * deviation / expectedFrequency;
        }

        return (String.valueOf(df.format(chiSquare)));
    }

    public static void DESMethod(DES.DesResults results) {
        // Access the values of the EncryptionResults object here
        String output = "Encrypted text: \n" + results.encryptedTextDes +"\n\n"
                + "DNA Encrypted text: \n" + results.DNAEncryptedTextDes +"\n\n"
                + "DNA Decrypted text: \n" + results.DNADecryptedTextDes +"\n\n"
                + "Decrypted text: \n" + results.decryptedTextDes +"\n\n"
                + "Encryption time: " + results.encryptionTime +" ms\n"
                + "Decryption time: " + results.decryptionTime +" ms\n";
        jTextArea5.setText(output);
        DesEncryptionTime=String.valueOf(results.encryptionTime);
        DesDecryptionTime=String.valueOf(results.decryptionTime);
        DesEncryptedText= ChiResult(results.encryptedTextDes.substring(0, Math.min(results.encryptedTextDes.length(), 100)));
    }
    public static void AESMethod(AES.AesResults results) {
        // Access the values of the Results object here
        String output = "Encrypted text: \n" + results.encryptedTextAes +"\n\n"
                + "DNA Encrypted text: \n" + results.DNAEncryptedTextAes +"\n\n"
                + "DNA Decrypted text: \n" + results.DNADecryptedTextAes +"\n\n"
                + "Decrypted text: \n" + results.decryptedTextAes +"\n\n"
                + "Encryption time: " + results.encryptionTime +" ms\n"
                + "Decryption time: " + results.decryptionTime +" ms\n";
        jTextArea6.setText(output);
        AesEncryptionTime=String.valueOf(results.encryptionTime);
        AesDecryptionTime=String.valueOf(results.decryptionTime);
        AesEncryptedText = ChiResult(results.encryptedTextAes.substring(0, Math.min(results.encryptedTextAes.length(), 100)));

    }
    public static void MAESMethod(AESmodified.ModifiedAesResults results) {
        // Access the values of the Results object here
        String output = "Encrypted text: \n" + results.encryptedTextMAes +"\n\n"
                + "DNA Encrypted text: \n" + results.DNAEncryptedTextMAes +"\n\n"
                + "DNA Decrypted text: \n" + results.DNADecryptedTextMAes +"\n\n"
                + "Decrypted text: \n" + results.decryptedTextMAes +"\n\n"
                + "Encryption time: " + results.encryptionTime +" ms\n"
                + "Decryption time: " + results.decryptionTime +" ms\n";
        jTextArea7.setText(output);
        MAesEncryptionTime=String.valueOf(results.encryptionTime);
        MAesDecryptionTime=String.valueOf(results.decryptionTime);
        MAesEncryptedText= ChiResult(results.encryptedTextMAes.substring(0, Math.min(results.encryptedTextMAes.length(), 100)));
    }

    private void DESKEYKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DESKEYKeyReleased
        updateDesKey();
    }//GEN-LAST:event_DESKEYKeyReleased

    private void DESKEYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DESKEYKeyTyped
        updateDesKey();
    }//GEN-LAST:event_DESKEYKeyTyped

    private void AESKEYKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AESKEYKeyReleased
        updateAesKey();
    }//GEN-LAST:event_AESKEYKeyReleased

    private void AESKEYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AESKEYKeyTyped
        updateAesKey();
    }//GEN-LAST:event_AESKEYKeyTyped

    private void MAESKEYKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MAESKEYKeyReleased
        updateMAesKey();
    }//GEN-LAST:event_MAESKEYKeyReleased

    private void MAESKEYKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MAESKEYKeyTyped
        updateMAesKey();
    }//GEN-LAST:event_MAESKEYKeyTyped
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Result result = new Result(this);
        result.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_jButton1ActionPerformed
        if(selectedFile==null){
            jLabel12.setText("Please Select a File");
        }
        else if(!jCheckBox1.isSelected() && !jCheckBox2.isSelected() && !jCheckBox3.isSelected()){
            jLabel12.setText("Please Select Algorithm(s)");
        }
        else if (DESKEY.getText().equals("") || AESKEY.getText().equals("") || MAESKEY.getText().equals("")){
            if(jCheckBox1.isSelected()&&DESKEY.getText().equals("")){
                jLabel12.setText("Please Enter Key For DES");
            }
            else if(jCheckBox2.isSelected()&&AESKEY.getText().equals("")){
                jLabel12.setText("Please Enter Key For AES");
            }
            else if(jCheckBox3.isSelected()&&MAESKEY.getText().equals("")){
                jLabel12.setText("Please Enter Key For Modified-AES");
            }
            else{
                if(jCheckBox1.isSelected()&&!jCheckBox2.isSelected()&&!jCheckBox3.isSelected()){
                    if(desKey.length()!=8){
                        jLabel12.setText("Enter 64-bit length key for DES");
                    }
                    else{
                        jLabel12.setText("File Name: "+selectedFile.getName());
                        String[] args = new String[] {selectedFile.getAbsolutePath()};
                        DES.main(args);
                        jButton2.setEnabled(true);
                    }
                }
                else if(!jCheckBox1.isSelected()&&jCheckBox2.isSelected()&&!jCheckBox3.isSelected()){
                    if((aesKey.length()!=16)&&(aesKey.length()!=24)&&(aesKey.length()!=32)){
                        jLabel12.setText("Enter 128/192/256-bit length key for AES");
                    }
                    else {
                        jLabel12.setText("File Name: " +selectedFile.getName());
                        String[] args = new String[]{selectedFile.getAbsolutePath()};
                        AES.main(args);
                        jButton2.setEnabled(true);
                    }
                }
                else if(!jCheckBox1.isSelected()&&!jCheckBox2.isSelected()&&jCheckBox3.isSelected()) {
                    if((mAesKey.length()!=16)&&(mAesKey.length()!=24)&&(mAesKey.length()!=32)){
                        jLabel12.setText("Enter 128/192/256-bit length key for Modified-AES");
                    }
                    else {
                        jLabel12.setText("File Name: " + selectedFile.getName());
                        String[] args = new String[]{selectedFile.getAbsolutePath()};
                        AESmodified.main(args);
                        jButton2.setEnabled(true);
                    }
                }
                else if (jCheckBox1.isSelected() && jCheckBox2.isSelected()&&!jCheckBox3.isSelected()) {
                    if (desKey.length() != 8) {
                        jLabel12.setText("Enter 64-bit length key for DES");
                    }
                    else if ((aesKey.length() != 16)&&(aesKey.length() != 24)&&(aesKey.length() != 32)) {
                        jLabel12.setText("Enter 128/192/256-bit length key for AES");
                    }
                    else if((desKey.length()==8)&&(aesKey.length() == 16 || aesKey.length() == 24 || aesKey.length() == 32)) {
                        jLabel12.setText("File Name: " + selectedFile.getName());
                        jButton2.setEnabled(true);
                        String[] args = new String[] { selectedFile.getAbsolutePath() };
                        DES.main(args);
                        AES.main(args);
                    }
                }
                else if (jCheckBox1.isSelected() && !jCheckBox2.isSelected()&& jCheckBox3.isSelected()) {
                    if (desKey.length() != 8) {
                        jLabel12.setText("Enter 64-bit length key for DES");
                    }
                    else if((mAesKey.length()!=16)&&(mAesKey.length()!=24)&&(mAesKey.length()!=32)){
                        jLabel12.setText("Enter 128/192/256-bit length key for Modified-AES");
                    }
                    else if((desKey.length()==8)&&(mAesKey.length() == 16 || mAesKey.length() == 24 || mAesKey.length() == 32)) {
                        jLabel12.setText("File Name: " + selectedFile.getName());
                        jButton2.setEnabled(true);
                        String[] args = new String[] { selectedFile.getAbsolutePath() };
                        DES.main(args);
                        AESmodified.main(args);
                    }
                }
                else if (!jCheckBox1.isSelected() && jCheckBox2.isSelected()&& jCheckBox3.isSelected()) {
                    if((aesKey.length()!=16)&&(aesKey.length()!=24)&&(aesKey.length()!=32)){
                        jLabel12.setText("Enter 128/192/256-bit length key for AES");
                    }
                    else if((mAesKey.length()!=16)&&(mAesKey.length()!=24)&&(mAesKey.length()!=32)){
                        jLabel12.setText("Enter 128/192/256-bit length key for Modified-AES");
                    }
                    else if((aesKey.length() == 16 || aesKey.length() == 24 || aesKey.length() == 32)&&(mAesKey.length() == 16 || mAesKey.length() == 24 || mAesKey.length() == 32)){
                        jLabel12.setText("File Name: " + selectedFile.getName());
                        jButton2.setEnabled(true);
                        String[] args = new String[] { selectedFile.getAbsolutePath() };
                        AES.main(args);
                        AESmodified.main(args);
                    }
                }
            }
        }
        else if(jCheckBox1.isSelected() && jCheckBox2.isSelected() && jCheckBox3.isSelected()){
            //write code for if all algorithm is selected
            if (!DESKEY.getText().equals("") && !AESKEY.getText().equals("") && !MAESKEY.getText().equals("")) {
                if((desKey.length()==8)&&(aesKey.length() == 16 || aesKey.length() == 24 || aesKey.length() == 32)&&(mAesKey.length() == 16 || mAesKey.length() == 24 || mAesKey.length() == 32)){
                    jLabel12.setText("File Name: " + selectedFile.getName());
                    jButton2.setEnabled(true);
                    String[] args = new String[] { selectedFile.getAbsolutePath() };
                    DES.main(args);
                    AES.main(args);
                    AESmodified.main(args);
                }
                else if (desKey.length() != 8) {
                    jLabel12.setText("Enter 64-bit length key for DES");
                }
                else if((aesKey.length() != 16)&&(aesKey.length() != 24)&&(aesKey.length() != 32)) {
                    jLabel12.setText("Enter 128/192/256-bit length key for AES");
                }
                else if((mAesKey.length()!=16)&&(mAesKey.length()!=24)&&(mAesKey.length()!=32)){
                    jLabel12.setText("Enter 128/192/256-bit length key for Modified-AES");
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AESKEY;
    private javax.swing.JTextField DESKEY;
    private javax.swing.JTextField MAESKEY;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextArea jTextArea5;
    private static javax.swing.JTextArea jTextArea6;
    private static javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
